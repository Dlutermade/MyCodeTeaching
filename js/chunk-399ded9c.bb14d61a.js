(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-399ded9c"],{"520a":function(i,l,t){i.exports=t.p+"img/11.12f7e6b3.jpg"},"6db9":function(i,l,t){i.exports=t.p+"img/102279746_255292615749550_4586844583175856299_n.5034a0ca.png"},d1b2:function(i,l,t){"use strict";t.r(l);var e=function(){var i=this,l=i.$createElement;i._self._c;return i._m(0)},n=[function(){var i=this,l=i.$createElement,e=i._self._c||l;return e("div",[e("p",{staticClass:"text-4xl text-MyColor-H3 font-bold pt-4"},[i._v("函式")]),e("p",{staticClass:"text-3xl text-MyColor-H5"},[i._v("注意事項")]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("Function、Sub、Method、子程式、方法、函數...這些都是同個東西")]),e("li",[i._v("用來減化程式碼")]),e("li",[i._v("用函式來跑類似迴圈的解法稱為遞迴解")]),e("li",[i._v("遞迴解對應到的是迭代解")]),e("li",[i._v("遞迴有兩種，直接遞迴、間接遞迴")]),e("li",[i._v("直接遞迴 = 自己叫自己")]),e("li",[i._v("間接遞迴 = 自己叫別人 別人再叫自己")]),e("li",[i._v("遞迴會產生大量Call Stack")]),e("li",[i._v("Call Stack是指函式裡面呼叫其他或自己的函式")]),e("li",[i._v("所產生的Stack關係")]),e("li",[i._v("下圖為最佳範例")]),e("li",[i._v("產生了三個Call Stack")]),e("li",[i._v("能用迴圈的程式碼盡量用迴圈")]),e("li",[i._v("遞迴效能比較差可是程式會比較好理解")])]),e("br"),e("img",{staticClass:"max-w-6xl mx-auto",attrs:{src:t("520a"),alt:""}}),e("br"),e("p",{staticClass:"text-3xl text-MyColor-H5"},[i._v("PyThon")]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("PyThon語法上只有一種函式")]),e("li",[i._v("關鍵字是def是單字Definition(定義)縮寫")]),e("li",[i._v("Return 代表回傳")]),e("li",[i._v("Return 也可以當作結束函式")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("PyThon")]),e("li",[i._v("單行寫法(Lambda)")]),e("li",[i._v("Lambda中文意思叫做匿名")]),e("li",[i._v("在程式世界中叫做匿名函式")]),e("li",[e("code",[i._v("變數 = lambda 參數: 回傳值")])]),e("li",[e("code",[i._v("MySquare = lambda x: x**2")])]),e("li",[i._v("多行寫法")]),e("li",[e("code",[i._v("def 名稱(參數):")])]),e("li",[e("code",[e("pre",[i._v("    執行程式碼")])])]),e("li",[i._v("範例")]),e("li",[e("code",[i._v("def MySquare(x):")])]),e("li",[e("code",[e("pre",[i._v("    return x**2")])])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("PyThon 函式 是一級公民 即裡面變數 不等於外面變數")]),e("li",[i._v(" 但可以從內部Block尋找到外部Block的變數，這個過程稱為Hoisting(提升) ")])]),e("br"),e("p",{staticClass:"text-left underline Indent"},[i._v("題目範例")]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第一題")]),e("li",[e("code",[i._v("i = 0")])]),e("li",[e("code",[i._v("def MyFunc(j):")])]),e("li",[e("code",[e("pre",[i._v("    return j")])])]),e("li",[e("code",[e("pre",[i._v("    print(j, i)")])])]),e("li",[i._v("print(MyFunc(10))")])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出 10(最後一行的print)")]),e("li",[i._v(" 因為遇到return時回傳j，之後Function就結束了 ")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第二題")]),e("li",[e("code",[i._v("i = 0")])]),e("li",[e("code",[i._v("def MyFunc(j):")])]),e("li",[e("code",[e("pre",[i._v("    print(j, i)")])])]),e("li",[e("code",[e("pre",[i._v("    return j")])])]),e("li",[i._v("print(MyFunc(10))")])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v("再印出 10")]),e("li",[i._v(" 因為Hoisting提升找到了外面的i ")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第三題")]),e("li",[e("code",[i._v("i = 0")])]),e("li",[e("code",[i._v("def MyFunc(j):")])]),e("li",[e("code",[e("pre",[i._v("    print(j, i)")])])]),e("li",[e("code",[e("pre",[i._v("    i += 1")])])]),e("li",[e("code",[e("pre",[i._v("    print(j, i)")])])]),e("li",[e("code",[e("pre",[i._v("    return j")])])]),e("li",[e("code",[i._v("print(MyFunc(10), i)")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v("再印出10 1")]),e("li",[i._v("再印出10 0")]),e("li",[i._v(" 因為Hoisting提升找到了外面的i ")]),e("li",[i._v("但是再進行i += 1時候，因為一級公民，不允許修改外部的變數")]),e("li",[i._v("所以中間那個印出的i是Function內的區域變數")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第四題")]),e("li",[e("code",[i._v("i = 0")])]),e("li",[e("code",[i._v("def MyFunc(j):")])]),e("li",[e("code",[e("pre",[i._v("    global i")])])]),e("li",[e("code",[e("pre",[i._v("    print(j, i)")])])]),e("li",[e("code",[e("pre",[i._v("    i += 1")])])]),e("li",[e("code",[e("pre",[i._v("    print(j, i)")])])]),e("li",[e("code",[e("pre",[i._v("    return j")])])]),e("li",[e("code",[e("pre",[i._v("print(MyFunc(10), i)")])])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v("再印出10 1")]),e("li",[i._v("再印出10 1")]),e("li",[i._v(" 因為Hoisting提升找到了外面的i ")]),e("li",[i._v(" 但是再進行i += 1時候，因為global i這行，讓內部的i都是外部的變數i即全域變數 ")]),e("li",[i._v("在程式開發上要盡量避免用global因為這樣效能很差不如帶參數進去")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第五題(遞迴)")]),e("li",[e("code",[i._v("def MyFunc(i):")])]),e("li",[e("code",[e("pre",[i._v("    if i == 1:")])])]),e("li",[e("code",[e("pre",[i._v("        retrun i")])])]),e("li",[e("code",[e("pre",[i._v("    else:")])])]),e("li",[e("code",[e("pre",[i._v("        retrun MyFunc(i-1) + i")])])]),e("li",[i._v("print(MyFunc(10))")])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出55")]),e("li",[i._v("即1+2+3+4+5+6+7+8+9+10")]),e("li",[i._v("終止條件是 i == 1")]),e("li",[i._v(" 遞迴條件是 i != 1 ")]),e("li",[i._v("遞迴公式是f(n-1) + n")]),e("li",[i._v("即n慢慢-1到1為止的相加")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第六題(回朔演算法遞迴)[校內程式比賽只有兩個人寫出來]")]),e("li",[e("code",[i._v("def MyFunc(item, L, R):")])]),e("li",[e("code",[e("pre",[i._v("    if L == R:")])])]),e("li",[e("code",[e("pre",[i._v('        Print("".join(item))')])])]),e("li",[e("code",[e("pre",[i._v("    else:")])])]),e("li",[e("code",[e("pre",[i._v("        for i in range(L, R + 1)")])])]),e("li",[e("code",[e("pre",[i._v("            item[i], item[L] = item[L], item[i]")])])]),e("li",[e("code",[e("pre",[i._v("            MyFunc(item, L+1, R)")])])]),e("li",[e("code",[e("pre",[i._v("            item[i], item[L] = item[L], item[i]")])])]),e("li",[e("code",[i._v('A = ["A", "B", "C"]')])]),e("li",[e("code",[i._v("MyFunc(A, 0, len(A) - 1)")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出ABC")]),e("li",[i._v("印出ACB")]),e("li",[i._v("印出BAC")]),e("li",[i._v("印出BCA")]),e("li",[i._v("印出CBA")]),e("li",[i._v("印出CAB")]),e("li",[i._v("這題出現在某屆技藝競賽列舉出所有排列組合")]),e("li",[i._v("這是一個經典的回朔演算法")]),e("li",[i._v(" 某F函式把Item從A狀態修改成B狀態，則當函式結束時候就把Item從B狀態回朔到A狀態 ")]),e("li",[i._v("圖解")])]),e("br"),e("img",{staticClass:" max-w-6xl mx-auto",attrs:{src:t("6db9"),alt:""}}),e("br"),e("p",{staticClass:"text-3xl text-MyColor-H5"},[i._v("VB")]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("VB有兩種函式")]),e("li",[i._v("第一種Function，意思如同數學的函式，即擁有回傳值")]),e("li",[i._v("回傳方式 函式名稱 = 回傳值")]),e("li",[i._v("第二種叫做Sub，意思為子程式，不具有回傳值")]),e("li",[i._v("需要注意ByRef和ByVal的差異")]),e("li",[i._v("ByRef代表指向記憶體，傳的參數是記憶體位址")]),e("li",[i._v("所以修改會影響到引入的變數")]),e("li",[i._v("ByVal代表的是Value值，傳的參數是值")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("Function")]),e("li",[e("code",[i._v("Function 名稱(參數)")])]),e("li",[e("code",[e("pre",[i._v("    執行程式碼")])])]),e("li",[e("code",[i._v("End Function")])]),e("li",[i._v("範例")]),e("li",[e("code",[i._v("Function MySquare(x)")])]),e("li",[e("code",[e("pre",[i._v("    MySquare = x ^ 2")])])]),e("li",[e("code",[i._v("End Function")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("可以把MySquare = x ^ 2改成Return x ^ 2")]),e("li",[i._v("可以透過Exit Function或是Return結束函式")])]),e("br"),e("p",{staticClass:"text-left underline Indent"},[i._v("題目範例")]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第一題")]),e("li",[e("code",[i._v("Dim i = 0")])]),e("li",[e("code",[i._v("Function MyFunc(ByVal j)")])]),e("li",[e("code",[e("pre",[i._v("    MyFunc = j")])])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & i)")])])]),e("li",[e("code",[i._v("End Function")])]),e("li",[i._v("MsgBox(MyFunc(10))")])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出 10(最後一行的MsgBox)")]),e("li",[i._v(" 因為遇到return時回傳j，之後Function就結束了 ")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第二題")]),e("li",[e("code",[i._v("Dim i = 0")])]),e("li",[e("code",[i._v("Function MyFunc(ByVal j)")])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & i)")])])]),e("li",[e("code",[e("pre",[i._v("    MyFunc = j")])])]),e("li",[e("code",[i._v("End Function")])]),e("li",[i._v("MsgBox(MyFunc(10))")])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v(" 再印出 10 ")]),e("li",[i._v("因為Hoisting提升找到了外面的i")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第三題")]),e("li",[e("code",[i._v("Dim i = 0")])]),e("li",[e("code",[i._v("Function MyFunc(ByVal j)")])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & i)")])])]),e("li",[e("code",[e("pre",[i._v("    i += 1")])])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & i)")])])]),e("li",[e("code",[e("pre",[i._v("    MyFunc = j")])])]),e("li",[e("code",[i._v("End Function")])]),e("li",[e("code",[i._v("MsgBox(MyFunc(10) & i)")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v(" 再印出 10 1 ")]),e("li",[i._v("再印出 10 1")]),e("li",[i._v("因為Hoisting提升找到了外面的i，VB是可以這樣直接修改外部的變數")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第四題")]),e("li",[e("code",[i._v("Dim i = 0")])]),e("li",[e("code",[i._v("Function MyFunc(ByVal j,ByVal K)")])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & K)")])])]),e("li",[e("code",[e("pre",[i._v("    K += 1")])])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & K)")])])]),e("li",[e("code",[e("pre",[i._v("    MyFunc = j")])])]),e("li",[e("code",[i._v("End Function")])]),e("li",[e("code",[i._v("MsgBox(MyFunc(10) & i)")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v(" 再印出 10 1 ")]),e("li",[i._v("再印出 10 0")]),e("li",[i._v("K這個參數是ByVal代表是把值帶進去")]),e("li",[i._v("即把1帶進去，我們僅僅只是對k這個變數 + 1，原本的i是沒有修改的")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("第五題")]),e("li",[e("code",[i._v("Dim i = 0")])]),e("li",[e("code",[i._v("Function MyFunc(ByVal j,ByRef K)")])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & K)")])])]),e("li",[e("code",[e("pre",[i._v("    K += 1")])])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(j & K)")])])]),e("li",[e("code",[e("pre",[i._v("    MyFunc = j")])])]),e("li",[e("code",[i._v("End Function")])]),e("li",[e("code",[i._v("MsgBox(MyFunc(10) & i)")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("印出10 0")]),e("li",[i._v(" 再印出 10 1 ")]),e("li",[i._v("再印出 10 1")]),e("li",[i._v("K這個參數是ByRef代表是把記憶體位址帶進去")]),e("li",[i._v("即把i變數的記憶位址帶進去")]),e("li",[i._v("實際上修改k的值(Value)是再修改i記憶體位置的值即i的Value")]),e("li",[i._v("所以改K等同於在改i")])]),e("br"),e("ol",{staticClass:"text-left list-none list-inside Indent"},[e("li",[i._v("Sub")]),e("li",[e("code",[i._v("Sub 名稱(參數)")])]),e("li",[e("code",[e("pre",[i._v("    執行程式碼")])])]),e("li",[e("code",[i._v("End Sub")])]),e("li",[i._v("範例")]),e("li",[e("code",[i._v("Sub MySquare(x)")])]),e("li",[e("code",[e("pre",[i._v("    MsgBox(x ^ 2)")])])]),e("li",[e("code",[i._v("End Sub")])])]),e("br"),e("ol",{staticClass:"text-left list-decimal list-inside Indent"},[e("li",[i._v("可以把MySquare = x ^ 2改成Return x ^ 2")]),e("li",[i._v("可以透過Exit Sub或是Return結束函式")]),e("li",[i._v("注意Sub不會有回傳值，所以記得Sub就是Function的子集")]),e("li",[i._v("姬掰VB語言，不易外一堆相同類似的語法，有夠繁瑣")]),e("li",[i._v("也有ByVal，ByRef但沒有回傳值不然跟上面的Function功能差不多")])]),e("br"),e("br")])}],s={name:"Function"},c=s,_=t("2877"),o=Object(_["a"])(c,e,n,!1,null,null,null);l["default"]=o.exports}}]);
//# sourceMappingURL=chunk-399ded9c.bb14d61a.js.map