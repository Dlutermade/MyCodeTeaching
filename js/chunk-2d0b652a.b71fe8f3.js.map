{"version":3,"sources":["webpack:///./src/views/DataType.vue?3a0a","webpack:///src/views/DataType.vue","webpack:///./src/views/DataType.vue?5d5e","webpack:///./src/views/DataType.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","name","component"],"mappings":"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","file":"js/chunk-2d0b652a.b71fe8f3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"text-4xl text-MyColor-H3 font-bold pt-4\"},[_vm._v(\"資料型態\")]),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"注意事項\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"稱為DataType、資料型別\")]),_c('li',[_vm._v(\" [ 資料結構DataStructure ]是基於[ 資料型別DataType ]的延伸兼子集，兩者不是同一個東西 \")]),_c('li',[_vm._v(\"DataType 決定占用記憶體空間\")]),_c('li',[_vm._v(\"DataStructure 決定讀取修改刪除的速度\")]),_c('li',[_vm._v(\"PyThon不會自動型別轉換，但VB會，因此VB是弱型別，PyThon是強型別\")]),_c('li',[_vm._v(\" PyThon不能宣告型別，但VB可以且VB也可以不宣告，兩個語言皆為動態型別，其中VB也可以是強型別 \")]),_c('li',[_vm._v(\"[自動轉換Type]稱為弱型別\")]),_c('li',[_vm._v(\"[不能自動轉換Type]稱為強型別\")]),_c('li',[_vm._v(\"[允許變數 更換Type]稱為動態型別\")]),_c('li',[_vm._v(\"[不允許變數 更換Type]稱為靜態型別\")])]),_c('br'),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"DataType\")]),_c('br'),_c('table',{staticClass:\" mx-auto my-2 w-4/5\"},[_c('thead',[_c('tr',[_c('th',{staticClass:\"w-1/2 px-4 py-2\"},[_vm._v(\"項目\")]),_c('th',{staticClass:\"w-1/4 px-4 py-2\"},[_vm._v(\"VB\")]),_c('th',{staticClass:\"w-1/4 px-4 py-2\"},[_vm._v(\"PyThon\")])])]),_c('tbody',[_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"字元(存放Ascii數字，表示一個字)\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Char\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"(隱含在字串裡)\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"字串(由多個字元所串在一起 簡稱字串)\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"String\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"str\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\" 短整數(-2^15[-32768] ~ 2^15-1[32767]) \")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Short\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"(隱含在整數裡)\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\" 整數(-2^31 ~ 2^31-1 備註PyThon沒有上限) \")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Integer\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"int\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"長整數(-2^63 ~ 2^63-1)\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Long\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"(隱含在整數裡)\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"浮點數(即有小數點)\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Single\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"float\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"雙精度浮點數(即兩倍空間的浮點數)\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Double\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"(隱含在浮點數裡)\")])]),_c('tr',[_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"布林值(表示 真(True) 或 偽(False))\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"Boolean\")]),_c('td',{staticClass:\"border px-4 py-2\"},[_vm._v(\"bool\")])])])]),_c('br'),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"轉換方式\")]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"數字轉字串\")]),_c('li',[_vm._v(\"PyThon\")]),_c('li',[_c('code',[_vm._v(\"str(20)\")])]),_c('li',[_vm._v(\"把整數20轉成字串20，str是轉換的函式同時也是str這個型別的建構子\")]),_c('li',[_vm._v(\" 備註 建構子是函式的一種，是class(類別)裡面定義用來建構Object(物件)的函式 \")]),_c('li',[_vm._v(\"所以\"),_c('code',[_vm._v(\"a = str(20)\")])]),_c('li',[_vm._v(\"可以稱a裡面存放的是型別為str的物件\")]),_c('li',[_vm._v(\"VB\")]),_c('li',[_c('code',[_vm._v(\"Str(20)\")])]),_c('li',[_vm._v(\"同上\")]),_c('li',[_vm._v(\"其他轉換依此類推\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"需要注意地方\")]),_c('li',[_vm._v(\"PyThon\")]),_c('li',[_c('code',[_vm._v(\"int(True)\")])]),_c('li',[_vm._v(\"把bool(True)轉成數字1\")]),_c('li',[_c('code',[_vm._v(\"int(False)\")])]),_c('li',[_vm._v(\"把bool(False)轉成數字0\")]),_c('li',[_vm._v(\"VB\")]),_c('li',[_c('code',[_vm._v(\"Int(True)\")])]),_c('li',[_vm._v(\"把Boolean(True)轉成數字-1\")]),_c('li',[_c('code',[_vm._v(\"Int(False)\")])]),_c('li',[_vm._v(\"把Boolean(False)轉成數字0\")])]),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"所謂轉換\")]),_c('br'),_c('img',{staticClass:\"mx-auto\",attrs:{\"src\":\"https://2.bp.blogspot.com/-z6nC9JYj8vY/WsWy73hIO8I/AAAAAAAAT4I/3DhB8aOI2JAQTJumnGOEPq2HtgF_R4s0wCLcBGAs/s1600/b0aeb7ffd1667b9162e5329154d43777_hd.jpg\",\"alt\":\"\"}}),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB的弱型別轉換\")]),_c('li',[_c('code',[_vm._v(\"Dim A As Integer\")])]),_c('li',[_vm._v(\"上述代碼 定義一個名為A的變數 型態是Integer\")]),_c('li',[_c('code',[_vm._v(\"A = \\\"20\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，字串\\\"20\\\"\")]),_c('li',[_vm._v(\"基於弱型別轉換，變數A會變成整數20，因為字串\\\"20\\\"是可以轉成數字的。\")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱1\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB的弱型別轉換\")]),_c('li',[_c('code',[_vm._v(\"Dim A As Integer\")])]),_c('li',[_vm._v(\"上述代碼 定義一個名為A的變數 型態是Integer\")]),_c('li',[_c('code',[_vm._v(\"A = \\\"A\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，字串\\\"A\\\"\")]),_c('li',[_vm._v(\" 基於弱型別轉換，會爆錯，字串\\\"A\\\"不能轉成數字，即使她有Ascii(65)也不行。 \")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱2\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB的弱型別轉換\")]),_c('li',[_c('code',[_vm._v(\"Dim A As Integer\")])]),_c('li',[_vm._v(\"上述代碼 定義一個名為A的變數 型態是Integer\")]),_c('li',[_c('code',[_vm._v(\"A = 4.5\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，浮點數 4.5\")]),_c('li',[_vm._v(\" 基於弱型別轉換，會是整數4，因為VB轉換是跑[ Cint ]函式，也就是傳說中的4捨6入5取偶(3.5 = 4 , 4.5 = 4) \")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱3\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB的動態型別轉換\")]),_c('li',[_c('code',[_vm._v(\"Dim A\")])]),_c('li',[_vm._v(\"上述代碼 定義一個變數為A，沒有限制型別\")]),_c('li',[_c('code',[_vm._v(\"A = \\\"10\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，字串 \\\"10\\\"\")]),_c('li',[_vm._v(\"基於動態型別轉換(注意不是弱型別)，會是字串\\\"10\\\"\")]),_c('li',[_c('code',[_vm._v(\"A = 10\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，整數 10\")]),_c('li',[_vm._v(\"基於動態型別轉換(注意不是弱型別)，會是整數 10\")]),_c('li',[_vm._v(\"上述表示 動態型別允許一個變數任意切換型別\")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱4\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB的動態型別轉換+弱型別\")]),_c('li',[_c('code',[_vm._v(\"Dim A\")])]),_c('li',[_vm._v(\"上述代碼 定義一個變數為A，沒有限制型別\")]),_c('li',[_c('code',[_vm._v(\"A = 10\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，整數 10\")]),_c('li',[_vm._v(\"基於動態型別轉換(注意不是弱型別)，會是字串\\\"10\\\"\")]),_c('li',[_c('code',[_vm._v(\"A = A + \\\"10\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，A(整數10) + 字串\\\"10\\\"\")]),_c('li',[_vm._v(\" 基於弱型別轉換，後面的Type會轉成前面的Type，除非後面的Type不能轉成前面的Type，變成前面的Type轉成後面的Type。 \")]),_c('li',[_vm._v(\"變成 A = 10 + 10 即 A = 20\")]),_c('li',[_vm._v(\" 從頭到尾變數的Type沒有轉換可是那個字串\\\"10\\\"卻變成整數，實際上只用到弱型別轉換 \")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱5\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB的動態型別轉換+弱型別\")]),_c('li',[_c('code',[_vm._v(\"Dim A\")])]),_c('li',[_vm._v(\"上述代碼 定義一個變數為A，沒有限制型別\")]),_c('li',[_c('code',[_vm._v(\"A = 10\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，整數 10\")]),_c('li',[_vm._v(\"基於動態型別轉換(注意不是弱型別)，會是字串\\\"10\\\"\")]),_c('li',[_c('code',[_vm._v(\"A = A & \\\"10\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，A(整數10) & 字串\\\"10\\\"\")]),_c('li',[_vm._v(\" &運算符是表示字串合併，即前後運算子轉成字串，即A(整數10)轉成字串\\\"10\\\" \")]),_c('li',[_vm._v(\"變成 A = \\\"10\\\" + \\\"10\\\" 即 A = \\\"1010\\\"\")]),_c('li',[_vm._v(\" A的Type從Integer變成String是動態型別的運用，而A原本的整數10變成字串\\\"10\\\"是弱型別的運用 \")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱6\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"PyThon的動態型別轉換\")]),_c('li',[_c('code',[_vm._v(\"A = 20\")])]),_c('li',[_vm._v(\"上述代碼 賦一個名為A的變數20這個值 型態是int\")]),_c('li',[_vm._v(\"備註PyThon不存在變數宣告這件事情\")]),_c('li',[_c('code',[_vm._v(\"A = \\\"10\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，字串 \\\"10\\\"\")]),_c('li',[_vm._v(\" 基於動態型別轉換(注意不是弱型別)，會是字串\\\"10\\\"，所謂[動態型別]是指DateType動態化 \")]),_c('li',[_vm._v(\"允許變數從int轉成str，即不限制變數的型別是什麼\")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"陷阱7\")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"PyThon的動態型別轉換+強型別\")]),_c('li',[_c('code',[_vm._v(\"A = 20\")])]),_c('li',[_vm._v(\"上述代碼 賦一個名為A的變數20這個值 型態是int\")]),_c('li',[_vm._v(\"備註PyThon不存在變數宣告這件事情\")]),_c('li',[_c('code',[_vm._v(\"A = A + \\\"10\\\"\")])]),_c('li',[_vm._v(\"上述代碼 表示對A賦予，A(整數20) + 字串 \\\"10\\\"\")]),_c('li',[_vm._v(\" 基於強型別特性，不允許自動轉換會報錯，因為str不能和int進行運算符操作。 \")])]),_c('br'),_c('br')])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p class=\"text-4xl text-MyColor-H3 font-bold pt-4\">資料型態</p>\r\n    <p class=\"text-3xl text-MyColor-H5\">注意事項</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>稱為DataType、資料型別</li>\r\n      <li>\r\n        [ 資料結構DataStructure ]是基於[ 資料型別DataType\r\n        ]的延伸兼子集，兩者不是同一個東西\r\n      </li>\r\n      <li>DataType 決定占用記憶體空間</li>\r\n      <li>DataStructure 決定讀取修改刪除的速度</li>\r\n      <li>PyThon不會自動型別轉換，但VB會，因此VB是弱型別，PyThon是強型別</li>\r\n      <li>\r\n        PyThon不能宣告型別，但VB可以且VB也可以不宣告，兩個語言皆為動態型別，其中VB也可以是強型別\r\n      </li>\r\n      <li>[自動轉換Type]稱為弱型別</li>\r\n      <li>[不能自動轉換Type]稱為強型別</li>\r\n      <li>[允許變數 更換Type]稱為動態型別</li>\r\n      <li>[不允許變數 更換Type]稱為靜態型別</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-3xl text-MyColor-H5\">DataType</p>\r\n    <br />\r\n    <table class=\" mx-auto my-2 w-4/5\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"w-1/2 px-4 py-2\">項目</th>\r\n          <th class=\"w-1/4 px-4 py-2\">VB</th>\r\n          <th class=\"w-1/4 px-4 py-2\">PyThon</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">字元(存放Ascii數字，表示一個字)</td>\r\n          <td class=\"border px-4 py-2\">Char</td>\r\n          <td class=\"border px-4 py-2\">(隱含在字串裡)</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">字串(由多個字元所串在一起 簡稱字串)</td>\r\n          <td class=\"border px-4 py-2\">String</td>\r\n          <td class=\"border px-4 py-2\">str</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">\r\n            短整數(-2^15[-32768] ~ 2^15-1[32767])\r\n          </td>\r\n          <td class=\"border px-4 py-2\">Short</td>\r\n          <td class=\"border px-4 py-2\">(隱含在整數裡)</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">\r\n            整數(-2^31 ~ 2^31-1 備註PyThon沒有上限)\r\n          </td>\r\n          <td class=\"border px-4 py-2\">Integer</td>\r\n          <td class=\"border px-4 py-2\">int</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">長整數(-2^63 ~ 2^63-1)</td>\r\n          <td class=\"border px-4 py-2\">Long</td>\r\n          <td class=\"border px-4 py-2\">(隱含在整數裡)</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">浮點數(即有小數點)</td>\r\n          <td class=\"border px-4 py-2\">Single</td>\r\n          <td class=\"border px-4 py-2\">float</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">雙精度浮點數(即兩倍空間的浮點數)</td>\r\n          <td class=\"border px-4 py-2\">Double</td>\r\n          <td class=\"border px-4 py-2\">(隱含在浮點數裡)</td>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border px-4 py-2\">布林值(表示 真(True) 或 偽(False))</td>\r\n          <td class=\"border px-4 py-2\">Boolean</td>\r\n          <td class=\"border px-4 py-2\">bool</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <br />\r\n    <p class=\"text-3xl text-MyColor-H5\">轉換方式</p>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>數字轉字串</li>\r\n      <li>PyThon</li>\r\n      <li><code>str(20)</code></li>\r\n      <li>把整數20轉成字串20，str是轉換的函式同時也是str這個型別的建構子</li>\r\n      <li>\r\n        備註 建構子是函式的一種，是class(類別)裡面定義用來建構Object(物件)的函式\r\n      </li>\r\n      <li>所以<code>a = str(20)</code></li>\r\n      <li>可以稱a裡面存放的是型別為str的物件</li>\r\n      <li>VB</li>\r\n      <li><code>Str(20)</code></li>\r\n      <li>同上</li>\r\n      <li>其他轉換依此類推</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>需要注意地方</li>\r\n      <li>PyThon</li>\r\n      <li><code>int(True)</code></li>\r\n      <li>把bool(True)轉成數字1</li>\r\n      <li><code>int(False)</code></li>\r\n      <li>把bool(False)轉成數字0</li>\r\n      <li>VB</li>\r\n      <li><code>Int(True)</code></li>\r\n      <li>把Boolean(True)轉成數字-1</li>\r\n      <li><code>Int(False)</code></li>\r\n      <li>把Boolean(False)轉成數字0</li>\r\n    </ol>\r\n    <p class=\"text-3xl text-MyColor-H5\">所謂轉換</p>\r\n    <br />\r\n    <img\r\n      class=\"mx-auto\"\r\n      src=\"https://2.bp.blogspot.com/-z6nC9JYj8vY/WsWy73hIO8I/AAAAAAAAT4I/3DhB8aOI2JAQTJumnGOEPq2HtgF_R4s0wCLcBGAs/s1600/b0aeb7ffd1667b9162e5329154d43777_hd.jpg\"\r\n      alt=\"\"\r\n    />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB的弱型別轉換</li>\r\n      <li><code>Dim A As Integer</code></li>\r\n      <li>上述代碼 定義一個名為A的變數 型態是Integer</li>\r\n      <li><code>A = \"20\"</code></li>\r\n      <li>上述代碼 表示對A賦予，字串\"20\"</li>\r\n      <li>基於弱型別轉換，變數A會變成整數20，因為字串\"20\"是可以轉成數字的。</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱1</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB的弱型別轉換</li>\r\n      <li><code>Dim A As Integer</code></li>\r\n      <li>上述代碼 定義一個名為A的變數 型態是Integer</li>\r\n      <li><code>A = \"A\"</code></li>\r\n      <li>上述代碼 表示對A賦予，字串\"A\"</li>\r\n      <li>\r\n        基於弱型別轉換，會爆錯，字串\"A\"不能轉成數字，即使她有Ascii(65)也不行。\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱2</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB的弱型別轉換</li>\r\n      <li><code>Dim A As Integer</code></li>\r\n      <li>上述代碼 定義一個名為A的變數 型態是Integer</li>\r\n      <li><code>A = 4.5</code></li>\r\n      <li>上述代碼 表示對A賦予，浮點數 4.5</li>\r\n      <li>\r\n        基於弱型別轉換，會是整數4，因為VB轉換是跑[ Cint\r\n        ]函式，也就是傳說中的4捨6入5取偶(3.5 = 4 , 4.5 = 4)\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱3</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB的動態型別轉換</li>\r\n      <li><code>Dim A</code></li>\r\n      <li>上述代碼 定義一個變數為A，沒有限制型別</li>\r\n      <li><code>A = \"10\"</code></li>\r\n      <li>上述代碼 表示對A賦予，字串 \"10\"</li>\r\n      <li>基於動態型別轉換(注意不是弱型別)，會是字串\"10\"</li>\r\n      <li><code>A = 10</code></li>\r\n      <li>上述代碼 表示對A賦予，整數 10</li>\r\n      <li>基於動態型別轉換(注意不是弱型別)，會是整數 10</li>\r\n      <li>上述表示 動態型別允許一個變數任意切換型別</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱4</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB的動態型別轉換+弱型別</li>\r\n      <li><code>Dim A</code></li>\r\n      <li>上述代碼 定義一個變數為A，沒有限制型別</li>\r\n      <li><code>A = 10</code></li>\r\n      <li>上述代碼 表示對A賦予，整數 10</li>\r\n      <li>基於動態型別轉換(注意不是弱型別)，會是字串\"10\"</li>\r\n      <li><code>A = A + \"10\"</code></li>\r\n      <li>上述代碼 表示對A賦予，A(整數10) + 字串\"10\"</li>\r\n      <li>\r\n        基於弱型別轉換，後面的Type會轉成前面的Type，除非後面的Type不能轉成前面的Type，變成前面的Type轉成後面的Type。\r\n      </li>\r\n      <li>變成 A = 10 + 10 即 A = 20</li>\r\n      <li>\r\n        從頭到尾變數的Type沒有轉換可是那個字串\"10\"卻變成整數，實際上只用到弱型別轉換\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱5</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB的動態型別轉換+弱型別</li>\r\n      <li><code>Dim A</code></li>\r\n      <li>上述代碼 定義一個變數為A，沒有限制型別</li>\r\n      <li><code>A = 10</code></li>\r\n      <li>上述代碼 表示對A賦予，整數 10</li>\r\n      <li>基於動態型別轉換(注意不是弱型別)，會是字串\"10\"</li>\r\n      <li><code>A = A & \"10\"</code></li>\r\n      <li>上述代碼 表示對A賦予，A(整數10) & 字串\"10\"</li>\r\n      <li>\r\n        &運算符是表示字串合併，即前後運算子轉成字串，即A(整數10)轉成字串\"10\"\r\n      </li>\r\n      <li>變成 A = \"10\" + \"10\" 即 A = \"1010\"</li>\r\n      <li>\r\n        A的Type從Integer變成String是動態型別的運用，而A原本的整數10變成字串\"10\"是弱型別的運用\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱6</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>PyThon的動態型別轉換</li>\r\n      <li><code>A = 20</code></li>\r\n      <li>上述代碼 賦一個名為A的變數20這個值 型態是int</li>\r\n      <li>備註PyThon不存在變數宣告這件事情</li>\r\n      <li><code>A = \"10\"</code></li>\r\n      <li>上述代碼 表示對A賦予，字串 \"10\"</li>\r\n      <li>\r\n        基於動態型別轉換(注意不是弱型別)，會是字串\"10\"，所謂[動態型別]是指DateType動態化\r\n      </li>\r\n      <li>允許變數從int轉成str，即不限制變數的型別是什麼</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">陷阱7</p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>PyThon的動態型別轉換+強型別</li>\r\n      <li><code>A = 20</code></li>\r\n      <li>上述代碼 賦一個名為A的變數20這個值 型態是int</li>\r\n      <li>備註PyThon不存在變數宣告這件事情</li>\r\n      <li><code>A = A + \"10\"</code></li>\r\n      <li>上述代碼 表示對A賦予，A(整數20) + 字串 \"10\"</li>\r\n      <li>\r\n        基於強型別特性，不允許自動轉換會報錯，因為str不能和int進行運算符操作。\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"DataType\"\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataType.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataType.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataType.vue?vue&type=template&id=ab6cabde&\"\nimport script from \"./DataType.vue?vue&type=script&lang=js&\"\nexport * from \"./DataType.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}