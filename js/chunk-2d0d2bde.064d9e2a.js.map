{"version":3,"sources":["webpack:///./src/views/Conditional.vue?58aa","webpack:///src/views/Conditional.vue","webpack:///./src/views/Conditional.vue?d6b1","webpack:///./src/views/Conditional.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","name","component"],"mappings":"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","file":"js/chunk-2d0d2bde.064d9e2a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"text-4xl text-MyColor-H3 font-bold pt-4\"},[_vm._v(\"判斷式\")]),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"注意事項\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"稱為ConditionalExpressions、條件判斷式、條件表達式\")]),_c('li',[_vm._v(\"條件成立 => 執行指定代碼\")]),_c('li',[_vm._v(\"條件通常是指True或是False\")]),_c('li',[_vm._v(\"假設 ...(條件) 則 ...(做甚麼)\")]),_c('li',[_vm._v(\"如果 ...(條件) 則 ...(做甚麼)\")]),_c('li',[_vm._v(\"若 ...(條件) 則 ...(做甚麼)\")]),_c('li',[_vm._v(\"當 ...(條件) 會 ...(做甚麼)\")]),_c('li',[_vm._v(\"當 ...(條件) A是 ...(A變甚麼)\")]),_c('li',[_vm._v(\"萬一 ...(條件) 就會 ...(發生甚麼)\")]),_c('li',[_vm._v(\"If ...(條件) Then ...(執行甚麼Code)\")])]),_c('br'),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"IF判斷式\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"If代表如果\")]),_c('li',[_vm._v(\"Else代表否則\")]),_c('li',[_vm._v(\"ElseIf代表否則如果\")]),_c('li',[_vm._v(\"條件成立只會跑一個區域，這個區域是最早遇到的判斷\")]),_c('li',[_vm._v(\"一組If必定只會有[1個IF]和 [0 ~ 1個Else]且中間可以有[多組ElseIf]\")]),_c('li',[_vm._v(\"If裡面有If叫做巢狀If，外面判斷成立才會進入裡面的判斷\")]),_c('li',[_vm._v(\" If結束下面又跑出一個If稱為兩組If倆著無關聯性，先跑上面If才跑下面If \")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"PyThon\")]),_c('li',[_vm._v(\"單行寫法\")]),_c('li',[_c('code',[_vm._v(\"if (條件): 執行程式碼\")])]),_c('li',[_c('code',[_vm._v(\"if True: a += 10\")])]),_c('li',[_vm._v(\"多行寫法\")]),_c('li',[_c('code',[_vm._v(\"if 條件:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"elif 條件:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_vm._v(\"範例\")]),_c('li',[_c('code',[_vm._v(\"if a > 10:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a -= 10\")])])]),_c('li',[_c('code',[_vm._v(\"elif a < 10:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a += 10\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a %= 10\")])])]),_c('li',[_vm._v(\"PyThon是透過Tab(四個空白)表示裡面的區域(Block)\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"當 a > 10 則 a -= 10, 否則執行2\")]),_c('li',[_vm._v(\"當 a < 10 則 a += 10, 否則執行3\")]),_c('li',[_vm._v(\"a %=10\")])]),_c('br'),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"結果範例\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"a = 10 則a 變成 0\")]),_c('li',[_vm._v(\"a = 11 則a 變成 1\")]),_c('li',[_vm._v(\"a = 9 則a 變成 19\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB\")]),_c('li',[_vm._v(\"單行寫法\")]),_c('li',[_c('code',[_vm._v(\"If (條件) Then 執行程式碼\")])]),_c('li',[_c('code',[_vm._v(\"if True Then a += 10\")])]),_c('li',[_vm._v(\"多行寫法\")]),_c('li',[_c('code',[_vm._v(\"If 條件 Then\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"ElseIf 條件 Then\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"Else\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"End If\")])]),_c('li',[_vm._v(\"範例\")]),_c('li',[_c('code',[_vm._v(\"If a > 10 Then\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a -= 10\")])])]),_c('li',[_c('code',[_vm._v(\"ElseIf a < 10 Then\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a += 10\")])])]),_c('li',[_c('code',[_vm._v(\"Else\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a = a mod 10\")])])]),_c('li',[_c('code',[_vm._v(\"End If\")])])]),_c('br'),_c('p',{staticClass:\"text-justify italic underline Indent\"},[_vm._v(\" 陷阱1 \")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_c('code',[_vm._v(\"if 3 < a > 5:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a += 10\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a *= 10\")])])])]),_c('br'),_c('p',{staticClass:\"text-justify italic Indent\"},[_vm._v(\" 先轉換3 < a > 5 成 3 < a and a > 5 \")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"3 < a and a > 5則 a+=10 否則 a*=10\")])]),_c('br'),_c('p',{staticClass:\"text-justify  Indent\"},[_vm._v(\" 結果範例 \")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"a = 2 則 a變成20(else)\")]),_c('li',[_vm._v(\"a = 4 則 a變成40(else)\")]),_c('li',[_vm._v(\"a = 6 則 a變成16(if)\")])]),_c('br'),_c('p',{staticClass:\"text-justify italic underline Indent\"},[_vm._v(\" 陷阱2 \")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_c('code',[_vm._v(\"if a > 5:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a += 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a -= a\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a *= 10\")])])]),_c('li',[_c('code',[_vm._v(\"if a == 0:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a = True\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a = False\")])])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"當 a > 5 則 a += 10再a -= a, 否則執行2\")]),_c('li',[_vm._v(\"a *= 10\")])]),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"上面跑完跑下一組If\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"當 a == 0 則 a = True\")]),_c('li',[_vm._v(\"a = False\")])]),_c('br'),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"結果範例\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"a = 0 則a先變成0[0](第一組If)，再變成True(第二組If)\")]),_c('li',[_vm._v(\"a = 4 則a先變成40(第一組If)，再變成False(第二組If)\")]),_c('li',[_vm._v(\"a = 5 則a先變成50(第一組If)，再變成False(第二組If)\")]),_c('li',[_vm._v(\"a = 6 則a先變成0[16 - 16](第一組If)，再變成True(第二組If)\")])]),_c('br'),_c('p',{staticClass:\"text-justify italic underline Indent\"},[_vm._v(\" 陷阱3 \")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_c('code',[_vm._v(\"if a > 5:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a += 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a -= a\")])])]),_c('li',[_c('code',[_vm._v(\"elif a < 5:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a *= 2\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    if a > 6:\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a += 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a //= 2\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a *= 10\")])])]),_c('li',[_c('code',[_vm._v(\"if a > 0:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a = True\")])])]),_c('li',[_c('code',[_vm._v(\"else:\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    a = False\")])])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"當 a > 5 則 a += 10再a -= a, 否則執行2\")]),_c('li',[_vm._v(\"當 a < 5 則 a *= 2 進入三，之後再a //=2\")]),_c('li',[_vm._v(\"當 a > 6 則 a += 10\")])]),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"上面跑完跑下一組If\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"當 a >= 0 則 a = True\")]),_c('li',[_vm._v(\"a = False\")])]),_c('br'),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"結果範例\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\" a = -2 則a先變成-2[-4(因為-4 沒有 > 6所以沒進入第一組If裡面的If) / 2 => -2](第一組If)，再變成True(第二組If) \")]),_c('li',[_vm._v(\" a = 0 則a先變成0[ (0 * 2 = 0)=> 條件(0 > 6 => False)=>(0//2 => 0)](第一組If)，再變成False(第二組If) \")]),_c('li',[_vm._v(\" a = 2 則a先變成2[4(因為4 沒有 > 6所以沒進入第一組If裡面的If) / 2 => 2](第一組If)，再變成False(第二組If) \")]),_c('li',[_vm._v(\" a = 3 則a先變成3[6(因為6 沒有 > 6所以沒進入第一組If裡面的If) / 2 => 3](第一組If)，再變成False(第二組If) \")]),_c('li',[_vm._v(\" a = 4 則a先變成9[18(因為8 有 > 6所以沒進入第一組If裡面的If) / 2 => 9](第一組If)，再變成False(第二組If) \")]),_c('li',[_vm._v(\"a = 5 則a先變成50(第一組If)，再變成False(第二組If)\")]),_c('li',[_vm._v(\"a = 6 則a先變成0[16 - 16](第一組If)，再變成True(第二組If)\")])]),_c('br'),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"Select...Case\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"VB獨有\")]),_c('li',[_vm._v(\"傳一個值進去到Select\")]),_c('li',[_vm._v(\"看這個值是否有對應的Case\")]),_c('li',[_vm._v(\"只會跑最上面的Case即不會跑兩個含以上的Case\")]),_c('li',[_vm._v(\"最多存在1個Case Else\")]),_c('li',[_vm._v(\"To表示範圍\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"VB\")]),_c('li',[_c('code',[_vm._v(\"Select Case 值\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case a\")])])]),_c('li',[_c('pre',[_vm._v(\"    即值等於a\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        執行程式碼\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case b to c\")])])]),_c('li',[_c('pre',[_vm._v(\"    即值是從b到c的範圍內\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        執行程式碼\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case d, e, f\")])])]),_c('li',[_c('pre',[_vm._v(\"    即值是d或e或f\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        執行程式碼\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case Else\")])])]),_c('li',[_c('pre',[_vm._v(\"    即最上面的Case都沒執行才會執行的\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"End Select\")])]),_c('li',[_vm._v(\"範例\")]),_c('li',[_c('code',[_vm._v(\"Select Case a\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case 1\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a += 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case 1 To 5\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a *= 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case 6, 7, 8\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a = 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case Else\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a = 0\")])])]),_c('li',[_c('code',[_vm._v(\"End Select\")])])]),_c('br'),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"結果範例\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\" a = 0 則 a 變成 0 \")]),_c('li',[_vm._v(\" a = 1 則 a 變成 11(因為只會跑第一個出現的不會跑第二個出現) \")]),_c('li',[_vm._v(\" a = 2 則 a 變成 20 \")]),_c('li',[_vm._v(\" a = 5 則 a 變成 50 \")]),_c('li',[_vm._v(\" a = 6 則 a 變成 10 \")]),_c('li',[_vm._v(\" a = 7 則 a 變成 10 \")]),_c('li',[_vm._v(\"a = 9 則 a 變成 0(找不到對應只好跑Else)\")])]),_c('br'),_c('p',{staticClass:\"text-justify italic underline Indent\"},[_vm._v(\" 陷阱1 \")]),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_c('code',[_vm._v(\"Select Case a = 10\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case True\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a += 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case 1 To 5\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a *= 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case 6, 7, 8\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a = 10\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    Case Else\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        a = 0\")])])]),_c('li',[_c('code',[_vm._v(\"End Select\")])])]),_c('br'),_c('p',{staticClass:\"text-left Indent\"},[_vm._v(\"結果範例\")]),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"a = 0 帶進去會是False因為0不等於10，所以跑Case Else，即a變成0\")]),_c('li',[_vm._v(\"a = 2 帶進去會是False因為2不等於10，所以跑Case Else，即a變成0\")]),_c('li',[_vm._v(\"a = 10 帶進去會是True因為10等於10，所以跑Case True，即a變成20\")]),_c('li',[_vm._v(\" Select Case a = 10 這行是比較不是賦值所以會產生False或是True，所以是拿True或是False進去進行尋找Case \")])]),_c('br'),_c('br')])}]\n\nexport { render, staticRenderFns }","/* eslint-disable no-irregular-whitespace */\r\n<template>\r\n  <div>\r\n    <p class=\"text-4xl text-MyColor-H3 font-bold pt-4\">判斷式</p>\r\n    <p class=\"text-3xl text-MyColor-H5\">注意事項</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>稱為ConditionalExpressions、條件判斷式、條件表達式</li>\r\n      <li>條件成立 => 執行指定代碼</li>\r\n      <li>條件通常是指True或是False</li>\r\n      <li>假設 ...(條件) 則 ...(做甚麼)</li>\r\n      <li>如果 ...(條件) 則 ...(做甚麼)</li>\r\n      <li>若 ...(條件) 則 ...(做甚麼)</li>\r\n      <li>當 ...(條件) 會 ...(做甚麼)</li>\r\n      <li>當 ...(條件) A是 ...(A變甚麼)</li>\r\n      <li>萬一 ...(條件) 就會 ...(發生甚麼)</li>\r\n      <li>If ...(條件) Then ...(執行甚麼Code)</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-3xl text-MyColor-H5\">IF判斷式</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>If代表如果</li>\r\n      <li>Else代表否則</li>\r\n      <li>ElseIf代表否則如果</li>\r\n      <li>條件成立只會跑一個區域，這個區域是最早遇到的判斷</li>\r\n      <li>一組If必定只會有[1個IF]和 [0 ~ 1個Else]且中間可以有[多組ElseIf]</li>\r\n      <li>If裡面有If叫做巢狀If，外面判斷成立才會進入裡面的判斷</li>\r\n      <li>\r\n        If結束下面又跑出一個If稱為兩組If倆著無關聯性，先跑上面If才跑下面If\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>PyThon</li>\r\n      <li>單行寫法</li>\r\n      <li><code>if (條件): 執行程式碼</code></li>\r\n      <li><code>if True: a += 10</code></li>\r\n      <li>多行寫法</li>\r\n      <li><code>if 條件:</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>elif 條件:</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li>範例</li>\r\n      <li><code>if a > 10:</code></li>\r\n      <li>\r\n        <code><pre>    a -= 10</pre></code>\r\n      </li>\r\n      <li><code>elif a &lt; 10:</code></li>\r\n      <li>\r\n        <code><pre>    a += 10</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    a %= 10</pre></code>\r\n      </li>\r\n      <li>PyThon是透過Tab(四個空白)表示裡面的區域(Block)</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>當 a > 10 則 a -= 10, 否則執行2</li>\r\n      <li>當 a &lt; 10 則 a += 10, 否則執行3</li>\r\n      <li>a %=10</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left Indent\">結果範例</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>a = 10 則a 變成 0</li>\r\n      <li>a = 11 則a 變成 1</li>\r\n      <li>a = 9 則a 變成 19</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB</li>\r\n      <li>單行寫法</li>\r\n      <li><code>If (條件) Then 執行程式碼</code></li>\r\n      <li><code>if True Then a += 10</code></li>\r\n      <li>多行寫法</li>\r\n      <li><code>If 條件 Then</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>ElseIf 條件 Then</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>Else</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>End If</code></li>\r\n      <li>範例</li>\r\n      <li><code>If a > 10 Then</code></li>\r\n      <li>\r\n        <code><pre>    a -= 10</pre></code>\r\n      </li>\r\n      <li><code>ElseIf a &lt; 10 Then</code></li>\r\n      <li>\r\n        <code><pre>    a += 10</pre></code>\r\n      </li>\r\n      <li><code>Else</code></li>\r\n      <li>\r\n        <code><pre>    a = a mod 10</pre></code>\r\n      </li>\r\n      <li><code>End If</code></li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-justify italic underline Indent\">\r\n      陷阱1\r\n    </p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li><code>if 3 &lt; a > 5:</code></li>\r\n      <li>\r\n        <code><pre>    a += 10</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    a *= 10</pre></code>\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-justify italic Indent\">\r\n      先轉換3 &lt; a > 5 成 3 &lt; a and a > 5\r\n    </p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>3 &lt; a and a > 5則 a+=10 否則 a*=10</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-justify  Indent\">\r\n      結果範例\r\n    </p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>a = 2 則 a變成20(else)</li>\r\n      <li>a = 4 則 a變成40(else)</li>\r\n      <li>a = 6 則 a變成16(if)</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-justify italic underline Indent\">\r\n      陷阱2\r\n    </p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li><code>if a > 5:</code></li>\r\n      <li>\r\n        <code><pre>    a += 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    a -= a</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    a *= 10</pre></code>\r\n      </li>\r\n      <li><code>if a == 0:</code></li>\r\n      <li>\r\n        <code><pre>    a = True</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    a = False</pre></code>\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>當 a > 5 則 a += 10再a -= a, 否則執行2</li>\r\n      <li>a *= 10</li>\r\n    </ol>\r\n    <p class=\"text-left Indent\">上面跑完跑下一組If</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>當 a == 0 則 a = True</li>\r\n      <li>a = False</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left Indent\">結果範例</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>a = 0 則a先變成0[0](第一組If)，再變成True(第二組If)</li>\r\n      <li>a = 4 則a先變成40(第一組If)，再變成False(第二組If)</li>\r\n      <li>a = 5 則a先變成50(第一組If)，再變成False(第二組If)</li>\r\n      <li>a = 6 則a先變成0[16 - 16](第一組If)，再變成True(第二組If)</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-justify italic underline Indent\">\r\n      陷阱3\r\n    </p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li><code>if a > 5:</code></li>\r\n      <li>\r\n        <code><pre>    a += 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    a -= a</pre></code>\r\n      </li>\r\n      <li><code>elif a &lt; 5:</code></li>\r\n      <li>\r\n        <code><pre>    a *= 2</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    if a > 6:</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a += 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    a //= 2</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    a *= 10</pre></code>\r\n      </li>\r\n      <li><code>if a > 0:</code></li>\r\n      <li>\r\n        <code><pre>    a = True</pre></code>\r\n      </li>\r\n      <li><code>else:</code></li>\r\n      <li>\r\n        <code><pre>    a = False</pre></code>\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>當 a > 5 則 a += 10再a -= a, 否則執行2</li>\r\n      <li>當 a &lt; 5 則 a *= 2 進入三，之後再a //=2</li>\r\n      <li>當 a > 6 則 a += 10</li>\r\n    </ol>\r\n    <p class=\"text-left Indent\">上面跑完跑下一組If</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>當 a >= 0 則 a = True</li>\r\n      <li>a = False</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left Indent\">結果範例</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>\r\n        a = -2 則a先變成-2[-4(因為-4 沒有 > 6所以沒進入第一組If裡面的If) / 2 =>\r\n        -2](第一組If)，再變成True(第二組If)\r\n      </li>\r\n      <li>\r\n        a = 0 則a先變成0[ (0 * 2 = 0)=> 條件(0 > 6 => False)=>(0//2 =>\r\n        0)](第一組If)，再變成False(第二組If)\r\n      </li>\r\n      <li>\r\n        a = 2 則a先變成2[4(因為4 沒有 > 6所以沒進入第一組If裡面的If) / 2 =>\r\n        2](第一組If)，再變成False(第二組If)\r\n      </li>\r\n      <li>\r\n        a = 3 則a先變成3[6(因為6 沒有 > 6所以沒進入第一組If裡面的If) / 2 =>\r\n        3](第一組If)，再變成False(第二組If)\r\n      </li>\r\n      <li>\r\n        a = 4 則a先變成9[18(因為8 有 > 6所以沒進入第一組If裡面的If) / 2 =>\r\n        9](第一組If)，再變成False(第二組If)\r\n      </li>\r\n      <li>a = 5 則a先變成50(第一組If)，再變成False(第二組If)</li>\r\n      <li>a = 6 則a先變成0[16 - 16](第一組If)，再變成True(第二組If)</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-3xl text-MyColor-H5\">Select...Case</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>VB獨有</li>\r\n      <li>傳一個值進去到Select</li>\r\n      <li>看這個值是否有對應的Case</li>\r\n      <li>只會跑最上面的Case即不會跑兩個含以上的Case</li>\r\n      <li>最多存在1個Case Else</li>\r\n      <li>To表示範圍</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>VB</li>\r\n      <li><code>Select Case 值</code></li>\r\n      <li>\r\n        <code><pre>    Case a</pre></code>\r\n      </li>\r\n      <li>\r\n        <pre>    即值等於a</pre>\r\n      </li>\r\n      <li>\r\n        <code><pre>        執行程式碼</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case b to c</pre></code>\r\n      </li>\r\n      <li>\r\n        <pre>    即值是從b到c的範圍內</pre>\r\n      </li>\r\n      <li>\r\n        <code><pre>        執行程式碼</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case d, e, f</pre></code>\r\n      </li>\r\n      <li><pre>    即值是d或e或f</pre></li>\r\n      <li>\r\n        <code><pre>        執行程式碼</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case Else</pre></code>\r\n      </li>\r\n      <li><pre>    即最上面的Case都沒執行才會執行的</pre></li>\r\n      <li>\r\n        <code><pre>        執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>End Select</code></li>\r\n      <li>範例</li>\r\n      <li><code>Select Case a</code></li>\r\n      <li>\r\n        <code><pre>    Case 1</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a += 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case 1 To 5</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a *= 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case 6, 7, 8</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a = 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case Else</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a = 0</pre></code>\r\n      </li>\r\n      <li><code>End Select</code></li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left Indent\">結果範例</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>\r\n        a = 0 則 a 變成 0\r\n      </li>\r\n      <li>\r\n        a = 1 則 a 變成 11(因為只會跑第一個出現的不會跑第二個出現)\r\n      </li>\r\n      <li>\r\n        a = 2 則 a 變成 20\r\n      </li>\r\n      <li>\r\n        a = 5 則 a 變成 50\r\n      </li>\r\n      <li>\r\n        a = 6 則 a 變成 10\r\n      </li>\r\n      <li>\r\n        a = 7 則 a 變成 10\r\n      </li>\r\n      <li>a = 9 則 a 變成 0(找不到對應只好跑Else)</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-justify italic underline Indent\">\r\n      陷阱1\r\n    </p>\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li><code>Select Case a = 10</code></li>\r\n      <li>\r\n        <code><pre>    Case True</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a += 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case 1 To 5</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a *= 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case 6, 7, 8</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a = 10</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    Case Else</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        a = 0</pre></code>\r\n      </li>\r\n      <li><code>End Select</code></li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left Indent\">結果範例</p>\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>a = 0 帶進去會是False因為0不等於10，所以跑Case Else，即a變成0</li>\r\n      <li>a = 2 帶進去會是False因為2不等於10，所以跑Case Else，即a變成0</li>\r\n      <li>a = 10 帶進去會是True因為10等於10，所以跑Case True，即a變成20</li>\r\n      <li>\r\n        Select Case a = 10\r\n        這行是比較不是賦值所以會產生False或是True，所以是拿True或是False進去進行尋找Case\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <br />\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Conditional\"\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Conditional.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Conditional.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Conditional.vue?vue&type=template&id=38f7da0e&\"\nimport script from \"./Conditional.vue?vue&type=script&lang=js&\"\nexport * from \"./Conditional.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}