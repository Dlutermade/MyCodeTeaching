(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-6c4b0bc2"],{"75f4":function(e,i,t){e.exports=t.p+"img/DD.64dfbd9d.png"},bd69:function(e,i,t){"use strict";t.r(i);var l=function(){var e=this,i=e.$createElement;e._self._c;return e._m(0)},s=[function(){var e=this,i=e.$createElement,l=e._self._c||i;return l("div",{staticClass:"about"},[l("p",{staticClass:"text-4xl text-MyColor-H3 font-bold pt-4"},[e._v("演算法")]),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("還在更新中!!")]),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("注意事項")]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v("演算法Algorithm，大陸叫做算法")]),l("li",[e._v("一件事情，必定會有因果關係而解釋這關係就是推論")]),l("li",[e._v("這個推論的過程就是演算法")]),l("li",[e._v("比如石佩荃想交女朋友")]),l("li",[e._v(" 此時有很多種管道、買xx新娘、一日出租女友、談錢不談感情、真感情投入的 ")]),l("li",[e._v("上述共四種")]),l("li",[e._v("第一種步驟1花錢步驟2找仲介，這步驟很簡單")]),l("li",[e._v("第二種步驟1找人步驟2花錢，這種限制比較多，但步驟也算簡單")]),l("li",[e._v("第三種步驟1拿錢丟別人臉，風險大，可真的有這種人，步驟最簡單")]),l("li",[e._v("第四種需要培養感情，從認識到了解，步驟很繁瑣")]),l("li",[e._v("步驟最多，不一定比較差，可能較安全、總體評估下也比較好")]),l("li",[e._v(" 演算法也是依樣，通常程式競賽會講求迴圈數、遞迴次數少一點，來減少時間 ")]),l("li",[e._v("開發程式，則是要求程式要清楚明瞭，能夠讓越多人理解越好")]),l("li",[e._v("速度反而比較不重要")]),l("li",[e._v(" 演算法可以理解成事情的過程，每個人做事過程都不太依樣，有些人覺得A步驟很重要，有些人覺得可有可無 ")]),l("li",[e._v("用PyThon學演算法會比用VB好理解，但是VB步驟比較完整")])]),l("br"),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("GCD(最大公因數)")]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("輾轉相除法、歐幾里得算法")]),l("li",[l("code",[e._v("a, b = max(a,b), min(a,b)")])]),l("li",[l("code",[l("pre",[e._v("while b != 0:")])])]),l("li",[l("code",[l("pre",[e._v("    a, b = b, a % b")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 用較小數除較大數，再用出現的餘數（第一餘數）去除除數，再用出現的餘數（第二餘數）去除除數，如此反覆，直到最後餘數是0為止。如果是求兩個數的最大公約數，那麼最後的除數就是這兩個數的最大公約數。 ")]),l("li",[e._v("當b為0時候結束迴圈，a就是最大公因數")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=pGbvtWIFzy4",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("輾轉相減法、更相減損術、尼考曼徹斯法")]),l("li",[l("code",[l("pre",[e._v("while a != b:")])])]),l("li",[l("code",[l("pre",[e._v("    if a > b:")])])]),l("li",[l("code",[l("pre",[e._v("        a -= b")])])]),l("li",[l("code",[l("pre",[e._v("    elif a < b:")])])]),l("li",[l("code",[l("pre",[e._v("        b -= a")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" a > b 則 a - b如果b > a 則 b - a 直到a == b ")]),l("li",[e._v("當 a == b時候則a和b都是最大公因數")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=pGbvtWIFzy4",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("搜尋法")]),l("br"),l("p",{staticClass:"text-left underline Indent italic"},[e._v(" 搜尋法通常是依賴於資料結構，可是高中沒有教，所以不會考EX: Heap(堆積) 、Complete Binary Tree(完整二元樹)、Graph(圖)，排除這些僅剩下二分搜尋法和二分搜尋法的變種[插值搜尋法]以及循序搜尋法 ")]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("二分搜尋法")]),l("li",[l("code",[l("pre",[e._v("L = 0")])])]),l("li",[l("code",[l("pre",[e._v("R = len(items) - 1")])])]),l("li",[l("code",[l("pre",[e._v("while L <= R:")])])]),l("li",[l("code",[l("pre",[e._v("    Mid = (L + R) / 2")])])]),l("li",[l("code",[l("pre",[e._v("    if items[Mid] == Key:")])])]),l("li",[l("code",[l("pre",[e._v('        print("Key的Index是",Mid)')])])]),l("li",[l("code",[l("pre",[e._v("        break")])])]),l("li",[l("code",[l("pre",[e._v("    elif items[Mid] > Key:")])])]),l("li",[l("code",[l("pre",[e._v("        R = Mid - 1")])])]),l("li",[l("code",[l("pre",[e._v("    else:")])])]),l("li",[l("code",[l("pre",[e._v("        L = Mid + 1")])])]),l("li",[l("code",[l("pre",[e._v("else:")])])]),l("li",[l("code",[l("pre",[e._v('    print("找不到Key")')])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 每次搜尋找不到資料時資料量都會除以2所以叫做二分搜尋法 ")]),l("li",[e._v("假設找到則Break找不到則不會Break")]),l("li",[e._v("基於2分搜尋法的原理每次都除以2所以，時間複雜度最長是O(log2(n))")]),l("li",[e._v("n就是items的數量")]),l("li",[l("a",{staticClass:"text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=T7YQB_tGvQw",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])]),l("li",[e._v("她的變種插值搜尋法只是把Mid改成下面公式")]),l("li",[e._v(" int((R - L) * (Key - items[L]) / (items[R] - items[L])) + L ")]),l("li",[e._v("int是用來無條件捨去小數點用的")]),l("li",[e._v("插值搜尋法很複雜也不會考")]),l("li",[e._v("最長時間需要O(n)比二分搜尋法慢")])]),l("br"),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("Time complexity")]),l("br"),l("p",{staticClass:"text-left text-2xl Indent"},[e._v(" 時間複雜度，通常只看指數不看係數比如2X^3+3X^2當作X^2，但因應考試所以我們會算真實圈數。 ")]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("Log2(n):乘法版")]),l("li",[l("code",[l("pre",[e._v("i = 1")])])]),l("li",[l("code",[l("pre",[e._v("j = 0")])])]),l("li",[l("code",[l("pre",[e._v("while i <= n:")])])]),l("li",[l("code",[l("pre",[e._v("    i *= 2")])])]),l("li",[l("code",[l("pre",[e._v("    j += 1")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 每次迴圈都會i*2，所以成次方關係即2的次方 ")]),l("li",[e._v("迴圈會跑到大於n等同介於m次方以下到m-1次方含以上的數字")]),l("li",[e._v("答案是2^m次方+1而這個1是因為第一圈是1*2不是2*2")]),l("li",[e._v("總共會跑[Log2(n)+1]圈即迴圈結束j的值")]),l("li",[e._v("[]是指無條件捨去小數點")]),l("li",[e._v("APCS(大學先修檢定出過這題)")]),l("li",[e._v("如果把i *= 2改成i *= 3則變成[Log3(n)+1]")]),l("li",[e._v("[Log2(n)+1]在Big-O是寫作成O(Log(n))")]),l("li",[e._v("[Log3(n)+1]在Big-O是寫作成O(Log3(n))")]),l("li",[e._v("[Log10(n)+1]在Big-O是寫作成O(Log10(n))")])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("Log2(n):除法版")]),l("li",[l("code",[l("pre",[e._v("i = n")])])]),l("li",[l("code",[l("pre",[e._v("j = 0")])])]),l("li",[l("code",[l("pre",[e._v("while i > 0:")])])]),l("li",[l("code",[l("pre",[e._v("    i //= 2")])])]),l("li",[l("code",[l("pre",[e._v("    j += 1")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 每次迴圈都會i整數除法2，為乘法版的反算回去 ")]),l("li",[e._v("因為2/2 =1，1/2=0 特性得到會多一圈的結論")]),l("li",[e._v("依舊是[Log2(n)+1]在Big-O是寫作成O(Log(n))")])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("Log2(n):除法版應用(十進位轉二進位演算法)")]),l("li",[l("code",[l("pre",[e._v("i = n")])])]),l("li",[l("code",[l("pre",[e._v('MyBinNumber = ""')])])]),l("li",[l("code",[l("pre",[e._v("while i > 0:")])])]),l("li",[l("code",[l("pre",[e._v("    MyBinNumber = str(i % 2) + MyBinNumber")])])]),l("li",[l("code",[l("pre",[e._v("    i //= 2")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" MyBinNumber = str(i % 2) + MyBinNumber ")]),l("li",[e._v("帶6進去")]),l("li",[e._v("第一圈:0 i變成3")]),l("li",[e._v("第二圈:1 + 0 i變成1")]),l("li",[e._v("第三圈:1 + 1 + 0 i變成0")]),l("li",[e._v("i = 0 迴圈結束")]),l("li",[e._v("6轉2進位 110")])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("LogM(n)")]),l("li",[l("code",[l("pre",[e._v("i = 1")])])]),l("li",[l("code",[l("pre",[e._v("j = 0")])])]),l("li",[l("code",[l("pre",[e._v("while i <= n:")])])]),l("li",[l("code",[l("pre",[e._v("    i *= m")])])]),l("li",[l("code",[l("pre",[e._v("    j += 1")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 每次迴圈都會i整數除法m，為m的指數關係 ")])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("1 ~ n總和:For")]),l("li",[l("code",[l("pre",[e._v("k = 0")])])]),l("li",[l("code",[l("pre",[e._v("for i in range(1, n+1):")])])]),l("li",[l("code",[l("pre",[e._v("    for j in range(i, n+1)")])])]),l("li",[l("code",[l("pre",[e._v("        k += 1")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 呈現次數(1+1+1+1...)+(1+1+1...)+...(1+1)+(1) 方式累加 ")]),l("li",[e._v(" ()是指內層迴圈 ")]),l("li",[e._v(" 看到這帶公式n(n + 1) / 2可以得到圈數 ")])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("1 ~ n總和:While")]),l("li",[l("code",[l("pre",[e._v("k = 0")])])]),l("li",[l("code",[l("pre",[e._v("i = 1")])])]),l("li",[l("code",[l("pre",[e._v("while i <= n:")])])]),l("li",[l("code",[l("pre",[e._v("    j = 1")])])]),l("li",[l("code",[l("pre",[e._v("    while j <= i")])])]),l("li",[l("code",[l("pre",[e._v("        j += 1")])])]),l("li",[l("code",[l("pre",[e._v("        k += 1")])])]),l("li",[l("code",[l("pre",[e._v("    i += 1")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v(" 呈現次數(1)+(1+1)+(1+1+1)+(1+1+1+1)...下去 ")]),l("li",[e._v(" ()是指內層迴圈 ")]),l("li",[e._v(" 看到這帶公式n(n + 1) / 2可以得到圈數 ")])]),l("br"),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("Perfect Number")]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("完美數:不含自己的因數加總等於自己")]),l("li",[l("code",[e._v("Factor = 0")])]),l("li",[l("code",[l("pre",[e._v("for i in range(1,n):")])])]),l("li",[l("code",[l("pre",[e._v("    if n % i == 0:")])])]),l("li",[l("code",[l("pre",[e._v("        Factor += i")])])]),l("li",[l("code",[l("pre",[e._v("if Factor == n:")])])]),l("li",[l("code",[l("pre",[e._v('    print(str(n) + "是完美數")')])])]),l("li",[l("code",[l("pre",[e._v("else:")])])]),l("li",[l("code",[l("pre",[e._v('    print(str(n) + "不是完美數")')])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v("n是該數字")]),l("li",[e._v("這題在題庫裏面出現過")]),l("li",[e._v(" 利用range(初始值,終止值,跳值)的終止值不含使range(1,1)不會出現[1]只會出現[] ")]),l("li",[e._v("比如6=1+2+3就是完美數")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=0p1QsPRJcAU",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("p",{staticClass:"text-3xl text-MyColor-H5"},[e._v("Fibonacci")]),l("br"),l("p",{staticClass:"text-left underline Indent italic"},[e._v(" 費式數列定義 F(0) = 0，F(1) = 1 F(X) = F(X - 1) + F(X + 2) ")]),l("p",{staticClass:"text-left Indent"},[e._v(" 產生的數列0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233 ")]),l("p",{staticClass:"text-left underline Indent italic"},[e._v(" 這題很重要考過超多次了，幾乎是每次段考必考題目。只是寫法不同 ")]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("費式數列:迭代版")]),l("li",[l("code",[e._v("F = 1")])]),l("li",[l("code",[e._v("Fb1 = 1")])]),l("li",[l("code",[e._v("Fb2 = 0")])]),l("li",[l("code",[e._v("i = n - 1")])]),l("li",[l("code",[l("pre",[e._v("while i !=0:")])])]),l("li",[l("code",[l("pre",[e._v("    F = Fb1 + Fb2")])])]),l("li",[l("code",[l("pre",[e._v("    Fb2 = Fb1")])])]),l("li",[l("code",[l("pre",[e._v("    Fb1 = F")])])]),l("li",[l("code",[l("pre",[e._v("    i -= 1")])])]),l("li",[l("code",[l("pre",[e._v('print("F(" + str(n) + ")是", F)')])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v("先定義好F(n-2) = F(0)和F(n-1) = F(1)")]),l("li",[e._v("並每次跑完迴圈更新 x-2 和 x-1")]),l("li",[e._v("由於是從F(2)為第一圈所以假設是求F(8)則是跑七圈 得到n-1圈的公式")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=VCJsUYeuqaY",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("費式數列:迭代版_試題版本實戰教學")]),l("li",[l("code",[e._v("A = 0")])]),l("li",[l("code",[e._v("B = 2")])]),l("li",[l("code",[e._v("C = 1")])]),l("li",[l("code",[e._v("D = 7")])]),l("li",[l("code",[l("pre",[e._v("while D > 0:")])])]),l("li",[l("code",[l("pre",[e._v("    A = B + C")])])]),l("li",[l("code",[l("pre",[e._v("    C = B")])])]),l("li",[l("code",[l("pre",[e._v("    B = A")])])]),l("li",[l("code",[l("pre",[e._v("    D //= 2")])])]),l("li",[l("code",[l("pre",[e._v("print(A)")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v("考卷中是D = Int(D / 2)，這句話本質就是D整數除法2所以簡寫D //= 2")]),l("li",[e._v(" 先計算圈數 7，7 // 2 = 3，3 // 2 = 1，1 // 2 = 0，共三圈，因為0不跑[0 > 0是False] ")]),l("li",[e._v("A = B + C，B和C是F(X - 1)和F(X - 2)")]),l("li",[e._v("B = 2，C =1，得知B是F(3)，C是F(2)")]),l("li",[e._v("在從公式F(X) = F(X - 1) + F(X - 2)可以推斷第一圈的A是F(4)")]),l("li",[e._v("第一圈求F(4)")]),l("li",[e._v("第三圈求F(6)")]),l("li",[e._v("F(4 + 3 - 1) = F(6)")]),l("li",[e._v("F(4) = 3")]),l("li",[e._v("F(5) = 5")]),l("li",[e._v("F(6) = 8")]),l("li",[e._v("答 8")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=VCJsUYeuqaY",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("費式數列:串列迭代版")]),l("li",[l("code",[e._v("F = [0, 1]")])]),l("li",[l("code",[l("pre",[e._v("for i in range(2, n + 1):")])])]),l("li",[l("code",[l("pre",[e._v("    F[i] = F[i - 1] + F[i + 1]")])])]),l("li",[l("code",[l("pre",[e._v('print("F(" + str(n) + ")是" + str(F[n]))')])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v("先定義好F(0)和F(1)依序的疊加下去")]),l("li",[e._v("range(2, n + 1)會產生[2,3,4...,n]的串列確保n跑到")]),l("li",[e._v("這公式在考卷出現過N次快膩了")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=VCJsUYeuqaY",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("ol",{staticClass:"text-left list-none list-inside Indent"},[l("li",[e._v("費式數列:遞迴版")]),l("li",[l("code",[e._v("def F(n):")])]),l("li",[l("code",[l("pre",[e._v("    if n > 1:")])])]),l("li",[l("code",[l("pre",[e._v("        return F(n - 1) + F(n - 2)")])])]),l("li",[l("code",[l("pre",[e._v("    else:")])])]),l("li",[l("code",[l("pre",[e._v("        return n")])])]),l("li",[l("code",[l("pre",[e._v("print(F(10))")])])])]),l("br"),l("ol",{staticClass:"text-left list-decimal list-inside Indent"},[l("li",[e._v("if n > 1是指2以上的數字(含2)假設不是則跑else")]),l("li",[e._v("2 - 2 = 0，2 - 1 = 1，得知會出現在Else的數字是0和1")]),l("li",[e._v("切記n必須為正數此Code才會成立")]),l("li",[e._v("也可以說費式數列本身就不存在負數")]),l("li",[e._v("這題是透過Call Stack所產生樹狀圖的詳細可以看下方圖解")]),l("li",[e._v("認識Call Stack則可以去看函式那頁")]),l("li",[l("a",{staticClass:" text-indigo-400 hover:text-purple-600",attrs:{href:"https://www.youtube.com/watch?v=VCJsUYeuqaY",target:"_blank",rel:"noreferrer noopener"}},[e._v("影片圖解")])])]),l("br"),l("img",{staticClass:" mx-auto max-w-64",attrs:{src:t("75f4"),alt:""}}),l("br"),l("br"),l("br")])}],n=t("2877"),r={},o=Object(n["a"])(r,l,s,!1,null,null,null);i["default"]=o.exports}}]);
//# sourceMappingURL=chunk-6c4b0bc2.020b71a1.js.map