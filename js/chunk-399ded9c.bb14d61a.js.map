{"version":3,"sources":["webpack:///./src/assets/img/11.jpg","webpack:///./src/assets/img/102279746_255292615749550_4586844583175856299_n.png","webpack:///./src/views/Function.vue?e088","webpack:///src/views/Function.vue","webpack:///./src/views/Function.vue?b53a","webpack:///./src/views/Function.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","name","component"],"mappings":"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","file":"js/chunk-399ded9c.bb14d61a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/11.12f7e6b3.jpg\";","module.exports = __webpack_public_path__ + \"img/102279746_255292615749550_4586844583175856299_n.5034a0ca.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"text-4xl text-MyColor-H3 font-bold pt-4\"},[_vm._v(\"函式\")]),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"注意事項\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"Function、Sub、Method、子程式、方法、函數...這些都是同個東西\")]),_c('li',[_vm._v(\"用來減化程式碼\")]),_c('li',[_vm._v(\"用函式來跑類似迴圈的解法稱為遞迴解\")]),_c('li',[_vm._v(\"遞迴解對應到的是迭代解\")]),_c('li',[_vm._v(\"遞迴有兩種，直接遞迴、間接遞迴\")]),_c('li',[_vm._v(\"直接遞迴 = 自己叫自己\")]),_c('li',[_vm._v(\"間接遞迴 = 自己叫別人 別人再叫自己\")]),_c('li',[_vm._v(\"遞迴會產生大量Call Stack\")]),_c('li',[_vm._v(\"Call Stack是指函式裡面呼叫其他或自己的函式\")]),_c('li',[_vm._v(\"所產生的Stack關係\")]),_c('li',[_vm._v(\"下圖為最佳範例\")]),_c('li',[_vm._v(\"產生了三個Call Stack\")]),_c('li',[_vm._v(\"能用迴圈的程式碼盡量用迴圈\")]),_c('li',[_vm._v(\"遞迴效能比較差可是程式會比較好理解\")])]),_c('br'),_c('img',{staticClass:\"max-w-6xl mx-auto\",attrs:{\"src\":require(\"../assets/img/11.jpg\"),\"alt\":\"\"}}),_c('br'),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"PyThon\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"PyThon語法上只有一種函式\")]),_c('li',[_vm._v(\"關鍵字是def是單字Definition(定義)縮寫\")]),_c('li',[_vm._v(\"Return 代表回傳\")]),_c('li',[_vm._v(\"Return 也可以當作結束函式\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"PyThon\")]),_c('li',[_vm._v(\"單行寫法(Lambda)\")]),_c('li',[_vm._v(\"Lambda中文意思叫做匿名\")]),_c('li',[_vm._v(\"在程式世界中叫做匿名函式\")]),_c('li',[_c('code',[_vm._v(\"變數 = lambda 參數: 回傳值\")])]),_c('li',[_c('code',[_vm._v(\"MySquare = lambda x: x**2\")])]),_c('li',[_vm._v(\"多行寫法\")]),_c('li',[_c('code',[_vm._v(\"def 名稱(參數):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_vm._v(\"範例\")]),_c('li',[_c('code',[_vm._v(\"def MySquare(x):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    return x**2\")])])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"PyThon 函式 是一級公民 即裡面變數 不等於外面變數\")]),_c('li',[_vm._v(\" 但可以從內部Block尋找到外部Block的變數，這個過程稱為Hoisting(提升) \")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"題目範例\")]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第一題\")]),_c('li',[_c('code',[_vm._v(\"i = 0\")])]),_c('li',[_c('code',[_vm._v(\"def MyFunc(j):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    return j\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    print(j, i)\")])])]),_c('li',[_vm._v(\"print(MyFunc(10))\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出 10(最後一行的print)\")]),_c('li',[_vm._v(\" 因為遇到return時回傳j，之後Function就結束了 \")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第二題\")]),_c('li',[_c('code',[_vm._v(\"i = 0\")])]),_c('li',[_c('code',[_vm._v(\"def MyFunc(j):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    print(j, i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    return j\")])])]),_c('li',[_vm._v(\"print(MyFunc(10))\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\"再印出 10\")]),_c('li',[_vm._v(\" 因為Hoisting提升找到了外面的i \")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第三題\")]),_c('li',[_c('code',[_vm._v(\"i = 0\")])]),_c('li',[_c('code',[_vm._v(\"def MyFunc(j):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    print(j, i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    i += 1\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    print(j, i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    return j\")])])]),_c('li',[_c('code',[_vm._v(\"print(MyFunc(10), i)\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\"再印出10 1\")]),_c('li',[_vm._v(\"再印出10 0\")]),_c('li',[_vm._v(\" 因為Hoisting提升找到了外面的i \")]),_c('li',[_vm._v(\"但是再進行i += 1時候，因為一級公民，不允許修改外部的變數\")]),_c('li',[_vm._v(\"所以中間那個印出的i是Function內的區域變數\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第四題\")]),_c('li',[_c('code',[_vm._v(\"i = 0\")])]),_c('li',[_c('code',[_vm._v(\"def MyFunc(j):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    global i\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    print(j, i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    i += 1\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    print(j, i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    return j\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"print(MyFunc(10), i)\")])])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\"再印出10 1\")]),_c('li',[_vm._v(\"再印出10 1\")]),_c('li',[_vm._v(\" 因為Hoisting提升找到了外面的i \")]),_c('li',[_vm._v(\" 但是再進行i += 1時候，因為global i這行，讓內部的i都是外部的變數i即全域變數 \")]),_c('li',[_vm._v(\"在程式開發上要盡量避免用global因為這樣效能很差不如帶參數進去\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第五題(遞迴)\")]),_c('li',[_c('code',[_vm._v(\"def MyFunc(i):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    if i == 1:\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        retrun i\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    else:\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        retrun MyFunc(i-1) + i\")])])]),_c('li',[_vm._v(\"print(MyFunc(10))\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出55\")]),_c('li',[_vm._v(\"即1+2+3+4+5+6+7+8+9+10\")]),_c('li',[_vm._v(\"終止條件是 i == 1\")]),_c('li',[_vm._v(\" 遞迴條件是 i != 1 \")]),_c('li',[_vm._v(\"遞迴公式是f(n-1) + n\")]),_c('li',[_vm._v(\"即n慢慢-1到1為止的相加\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第六題(回朔演算法遞迴)[校內程式比賽只有兩個人寫出來]\")]),_c('li',[_c('code',[_vm._v(\"def MyFunc(item, L, R):\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    if L == R:\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        Print(\\\"\\\".join(item))\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    else:\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"        for i in range(L, R + 1)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"            item[i], item[L] = item[L], item[i]\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"            MyFunc(item, L+1, R)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"            item[i], item[L] = item[L], item[i]\")])])]),_c('li',[_c('code',[_vm._v(\"A = [\\\"A\\\", \\\"B\\\", \\\"C\\\"]\")])]),_c('li',[_c('code',[_vm._v(\"MyFunc(A, 0, len(A) - 1)\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出ABC\")]),_c('li',[_vm._v(\"印出ACB\")]),_c('li',[_vm._v(\"印出BAC\")]),_c('li',[_vm._v(\"印出BCA\")]),_c('li',[_vm._v(\"印出CBA\")]),_c('li',[_vm._v(\"印出CAB\")]),_c('li',[_vm._v(\"這題出現在某屆技藝競賽列舉出所有排列組合\")]),_c('li',[_vm._v(\"這是一個經典的回朔演算法\")]),_c('li',[_vm._v(\" 某F函式把Item從A狀態修改成B狀態，則當函式結束時候就把Item從B狀態回朔到A狀態 \")]),_c('li',[_vm._v(\"圖解\")])]),_c('br'),_c('img',{staticClass:\" max-w-6xl mx-auto\",attrs:{\"src\":require(\"../assets/img/102279746_255292615749550_4586844583175856299_n.png\"),\"alt\":\"\"}}),_c('br'),_c('p',{staticClass:\"text-3xl text-MyColor-H5\"},[_vm._v(\"VB\")]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"VB有兩種函式\")]),_c('li',[_vm._v(\"第一種Function，意思如同數學的函式，即擁有回傳值\")]),_c('li',[_vm._v(\"回傳方式 函式名稱 = 回傳值\")]),_c('li',[_vm._v(\"第二種叫做Sub，意思為子程式，不具有回傳值\")]),_c('li',[_vm._v(\"需要注意ByRef和ByVal的差異\")]),_c('li',[_vm._v(\"ByRef代表指向記憶體，傳的參數是記憶體位址\")]),_c('li',[_vm._v(\"所以修改會影響到引入的變數\")]),_c('li',[_vm._v(\"ByVal代表的是Value值，傳的參數是值\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"Function\")]),_c('li',[_c('code',[_vm._v(\"Function 名稱(參數)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])]),_c('li',[_vm._v(\"範例\")]),_c('li',[_c('code',[_vm._v(\"Function MySquare(x)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MySquare = x ^ 2\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"可以把MySquare = x ^ 2改成Return x ^ 2\")]),_c('li',[_vm._v(\"可以透過Exit Function或是Return結束函式\")])]),_c('br'),_c('p',{staticClass:\"text-left underline Indent\"},[_vm._v(\"題目範例\")]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第一題\")]),_c('li',[_c('code',[_vm._v(\"Dim i = 0\")])]),_c('li',[_c('code',[_vm._v(\"Function MyFunc(ByVal j)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MyFunc = j\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & i)\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])]),_c('li',[_vm._v(\"MsgBox(MyFunc(10))\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出 10(最後一行的MsgBox)\")]),_c('li',[_vm._v(\" 因為遇到return時回傳j，之後Function就結束了 \")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第二題\")]),_c('li',[_c('code',[_vm._v(\"Dim i = 0\")])]),_c('li',[_c('code',[_vm._v(\"Function MyFunc(ByVal j)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MyFunc = j\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])]),_c('li',[_vm._v(\"MsgBox(MyFunc(10))\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\" 再印出 10 \")]),_c('li',[_vm._v(\"因為Hoisting提升找到了外面的i\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第三題\")]),_c('li',[_c('code',[_vm._v(\"Dim i = 0\")])]),_c('li',[_c('code',[_vm._v(\"Function MyFunc(ByVal j)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    i += 1\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & i)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MyFunc = j\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])]),_c('li',[_c('code',[_vm._v(\"MsgBox(MyFunc(10) & i)\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\" 再印出 10 1 \")]),_c('li',[_vm._v(\"再印出 10 1\")]),_c('li',[_vm._v(\"因為Hoisting提升找到了外面的i，VB是可以這樣直接修改外部的變數\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第四題\")]),_c('li',[_c('code',[_vm._v(\"Dim i = 0\")])]),_c('li',[_c('code',[_vm._v(\"Function MyFunc(ByVal j,ByVal K)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & K)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    K += 1\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & K)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MyFunc = j\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])]),_c('li',[_c('code',[_vm._v(\"MsgBox(MyFunc(10) & i)\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\" 再印出 10 1 \")]),_c('li',[_vm._v(\"再印出 10 0\")]),_c('li',[_vm._v(\"K這個參數是ByVal代表是把值帶進去\")]),_c('li',[_vm._v(\"即把1帶進去，我們僅僅只是對k這個變數 + 1，原本的i是沒有修改的\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"第五題\")]),_c('li',[_c('code',[_vm._v(\"Dim i = 0\")])]),_c('li',[_c('code',[_vm._v(\"Function MyFunc(ByVal j,ByRef K)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & K)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    K += 1\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(j & K)\")])])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MyFunc = j\")])])]),_c('li',[_c('code',[_vm._v(\"End Function\")])]),_c('li',[_c('code',[_vm._v(\"MsgBox(MyFunc(10) & i)\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"印出10 0\")]),_c('li',[_vm._v(\" 再印出 10 1 \")]),_c('li',[_vm._v(\"再印出 10 1\")]),_c('li',[_vm._v(\"K這個參數是ByRef代表是把記憶體位址帶進去\")]),_c('li',[_vm._v(\"即把i變數的記憶位址帶進去\")]),_c('li',[_vm._v(\"實際上修改k的值(Value)是再修改i記憶體位置的值即i的Value\")]),_c('li',[_vm._v(\"所以改K等同於在改i\")])]),_c('br'),_c('ol',{staticClass:\"text-left list-none list-inside Indent\"},[_c('li',[_vm._v(\"Sub\")]),_c('li',[_c('code',[_vm._v(\"Sub 名稱(參數)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    執行程式碼\")])])]),_c('li',[_c('code',[_vm._v(\"End Sub\")])]),_c('li',[_vm._v(\"範例\")]),_c('li',[_c('code',[_vm._v(\"Sub MySquare(x)\")])]),_c('li',[_c('code',[_c('pre',[_vm._v(\"    MsgBox(x ^ 2)\")])])]),_c('li',[_c('code',[_vm._v(\"End Sub\")])])]),_c('br'),_c('ol',{staticClass:\"text-left list-decimal list-inside Indent\"},[_c('li',[_vm._v(\"可以把MySquare = x ^ 2改成Return x ^ 2\")]),_c('li',[_vm._v(\"可以透過Exit Sub或是Return結束函式\")]),_c('li',[_vm._v(\"注意Sub不會有回傳值，所以記得Sub就是Function的子集\")]),_c('li',[_vm._v(\"姬掰VB語言，不易外一堆相同類似的語法，有夠繁瑣\")]),_c('li',[_vm._v(\"也有ByVal，ByRef但沒有回傳值不然跟上面的Function功能差不多\")])]),_c('br'),_c('br')])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p class=\"text-4xl text-MyColor-H3 font-bold pt-4\">函式</p>\r\n    <p class=\"text-3xl text-MyColor-H5\">注意事項</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>Function、Sub、Method、子程式、方法、函數...這些都是同個東西</li>\r\n      <li>用來減化程式碼</li>\r\n      <li>用函式來跑類似迴圈的解法稱為遞迴解</li>\r\n      <li>遞迴解對應到的是迭代解</li>\r\n      <li>遞迴有兩種，直接遞迴、間接遞迴</li>\r\n      <li>直接遞迴 = 自己叫自己</li>\r\n      <li>間接遞迴 = 自己叫別人 別人再叫自己</li>\r\n      <li>遞迴會產生大量Call Stack</li>\r\n      <li>Call Stack是指函式裡面呼叫其他或自己的函式</li>\r\n      <li>所產生的Stack關係</li>\r\n      <li>下圖為最佳範例</li>\r\n      <li>產生了三個Call Stack</li>\r\n      <li>能用迴圈的程式碼盡量用迴圈</li>\r\n      <li>遞迴效能比較差可是程式會比較好理解</li>\r\n    </ol>\r\n    <br />\r\n    <img class=\"max-w-6xl mx-auto\" src=\"../assets/img/11.jpg\" alt=\"\" />\r\n    <br />\r\n    <p class=\"text-3xl text-MyColor-H5\">PyThon</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>PyThon語法上只有一種函式</li>\r\n      <li>關鍵字是def是單字Definition(定義)縮寫</li>\r\n      <li>Return 代表回傳</li>\r\n      <li>Return 也可以當作結束函式</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>PyThon</li>\r\n      <li>單行寫法(Lambda)</li>\r\n      <li>Lambda中文意思叫做匿名</li>\r\n      <li>在程式世界中叫做匿名函式</li>\r\n      <li><code>變數 = lambda 參數: 回傳值</code></li>\r\n      <li><code>MySquare = lambda x: x**2</code></li>\r\n      <li>多行寫法</li>\r\n      <li><code>def 名稱(參數):</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li>範例</li>\r\n      <li><code>def MySquare(x):</code></li>\r\n      <li>\r\n        <code><pre>    return x**2</pre></code>\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>PyThon 函式 是一級公民 即裡面變數 不等於外面變數</li>\r\n      <li>\r\n        但可以從內部Block尋找到外部Block的變數，這個過程稱為Hoisting(提升)\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">題目範例</p>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第一題</li>\r\n      <li><code>i = 0</code></li>\r\n      <li><code>def MyFunc(j):</code></li>\r\n      <li>\r\n        <code><pre>    return j</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    print(j, i)</pre></code>\r\n      </li>\r\n      <li>print(MyFunc(10))</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出 10(最後一行的print)</li>\r\n      <li>\r\n        因為遇到return時回傳j，之後Function就結束了\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第二題</li>\r\n      <li><code>i = 0</code></li>\r\n      <li><code>def MyFunc(j):</code></li>\r\n      <li>\r\n        <code><pre>    print(j, i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    return j</pre></code>\r\n      </li>\r\n      <li>print(MyFunc(10))</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>再印出 10</li>\r\n      <li>\r\n        因為Hoisting提升找到了外面的i\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第三題</li>\r\n      <li><code>i = 0</code></li>\r\n      <li><code>def MyFunc(j):</code></li>\r\n      <li>\r\n        <code><pre>    print(j, i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    i += 1</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    print(j, i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    return j</pre></code>\r\n      </li>\r\n      <li><code>print(MyFunc(10), i)</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>再印出10 1</li>\r\n      <li>再印出10 0</li>\r\n      <li>\r\n        因為Hoisting提升找到了外面的i\r\n      </li>\r\n      <li>但是再進行i += 1時候，因為一級公民，不允許修改外部的變數</li>\r\n      <li>所以中間那個印出的i是Function內的區域變數</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第四題</li>\r\n      <li><code>i = 0</code></li>\r\n      <li><code>def MyFunc(j):</code></li>\r\n      <li>\r\n        <code><pre>    global i</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    print(j, i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    i += 1</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    print(j, i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    return j</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>print(MyFunc(10), i)</pre></code>\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>再印出10 1</li>\r\n      <li>再印出10 1</li>\r\n      <li>\r\n        因為Hoisting提升找到了外面的i\r\n      </li>\r\n      <li>\r\n        但是再進行i += 1時候，因為global\r\n        i這行，讓內部的i都是外部的變數i即全域變數\r\n      </li>\r\n      <li>在程式開發上要盡量避免用global因為這樣效能很差不如帶參數進去</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第五題(遞迴)</li>\r\n      <li><code>def MyFunc(i):</code></li>\r\n      <li>\r\n        <code><pre>    if i == 1:</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        retrun i</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    else:</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        retrun MyFunc(i-1) + i</pre></code>\r\n      </li>\r\n      <li>print(MyFunc(10))</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出55</li>\r\n      <li>即1+2+3+4+5+6+7+8+9+10</li>\r\n      <li>終止條件是 i == 1</li>\r\n      <li>\r\n        遞迴條件是 i != 1\r\n      </li>\r\n      <li>遞迴公式是f(n-1) + n</li>\r\n      <li>即n慢慢-1到1為止的相加</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第六題(回朔演算法遞迴)[校內程式比賽只有兩個人寫出來]</li>\r\n      <li><code>def MyFunc(item, L, R):</code></li>\r\n      <li>\r\n        <code><pre>    if L == R:</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        Print(\"\".join(item))</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    else:</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>        for i in range(L, R + 1)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>            item[i], item[L] = item[L], item[i]</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>            MyFunc(item, L+1, R)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>            item[i], item[L] = item[L], item[i]</pre></code>\r\n      </li>\r\n      <li><code>A = [\"A\", \"B\", \"C\"]</code></li>\r\n      <li><code>MyFunc(A, 0, len(A) - 1)</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出ABC</li>\r\n      <li>印出ACB</li>\r\n      <li>印出BAC</li>\r\n      <li>印出BCA</li>\r\n      <li>印出CBA</li>\r\n      <li>印出CAB</li>\r\n      <li>這題出現在某屆技藝競賽列舉出所有排列組合</li>\r\n      <li>這是一個經典的回朔演算法</li>\r\n      <li>\r\n        某F函式把Item從A狀態修改成B狀態，則當函式結束時候就把Item從B狀態回朔到A狀態\r\n      </li>\r\n      <li>圖解</li>\r\n    </ol>\r\n    <br />\r\n    <img\r\n      class=\" max-w-6xl mx-auto\"\r\n      src=\"../assets/img/102279746_255292615749550_4586844583175856299_n.png\"\r\n      alt=\"\"\r\n    />\r\n    <br />\r\n    <p class=\"text-3xl text-MyColor-H5\">VB</p>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>VB有兩種函式</li>\r\n      <li>第一種Function，意思如同數學的函式，即擁有回傳值</li>\r\n      <li>回傳方式 函式名稱 = 回傳值</li>\r\n      <li>第二種叫做Sub，意思為子程式，不具有回傳值</li>\r\n      <li>需要注意ByRef和ByVal的差異</li>\r\n      <li>ByRef代表指向記憶體，傳的參數是記憶體位址</li>\r\n      <li>所以修改會影響到引入的變數</li>\r\n      <li>ByVal代表的是Value值，傳的參數是值</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>Function</li>\r\n      <li><code>Function 名稱(參數)</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n      <li>範例</li>\r\n      <li><code>Function MySquare(x)</code></li>\r\n      <li>\r\n        <code><pre>    MySquare = x ^ 2</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>可以把MySquare = x ^ 2改成Return x ^ 2</li>\r\n      <li>可以透過Exit Function或是Return結束函式</li>\r\n    </ol>\r\n    <br />\r\n    <p class=\"text-left underline Indent\">題目範例</p>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第一題</li>\r\n      <li><code>Dim i = 0</code></li>\r\n      <li><code>Function MyFunc(ByVal j)</code></li>\r\n      <li>\r\n        <code><pre>    MyFunc = j</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & i)</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n      <li>MsgBox(MyFunc(10))</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出 10(最後一行的MsgBox)</li>\r\n      <li>\r\n        因為遇到return時回傳j，之後Function就結束了\r\n      </li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第二題</li>\r\n      <li><code>Dim i = 0</code></li>\r\n      <li><code>Function MyFunc(ByVal j)</code></li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MyFunc = j</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n      <li>MsgBox(MyFunc(10))</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>\r\n        再印出 10\r\n      </li>\r\n      <li>因為Hoisting提升找到了外面的i</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第三題</li>\r\n      <li><code>Dim i = 0</code></li>\r\n      <li><code>Function MyFunc(ByVal j)</code></li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    i += 1</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & i)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MyFunc = j</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n      <li><code>MsgBox(MyFunc(10) & i)</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>\r\n        再印出 10 1\r\n      </li>\r\n      <li>再印出 10 1</li>\r\n      <li>因為Hoisting提升找到了外面的i，VB是可以這樣直接修改外部的變數</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第四題</li>\r\n      <li><code>Dim i = 0</code></li>\r\n      <li><code>Function MyFunc(ByVal j,ByVal K)</code></li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & K)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    K += 1</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & K)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MyFunc = j</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n      <li><code>MsgBox(MyFunc(10) & i)</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>\r\n        再印出 10 1\r\n      </li>\r\n      <li>再印出 10 0</li>\r\n      <li>K這個參數是ByVal代表是把值帶進去</li>\r\n      <li>即把1帶進去，我們僅僅只是對k這個變數 + 1，原本的i是沒有修改的</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>第五題</li>\r\n      <li><code>Dim i = 0</code></li>\r\n      <li><code>Function MyFunc(ByVal j,ByRef K)</code></li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & K)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    K += 1</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MsgBox(j & K)</pre></code>\r\n      </li>\r\n      <li>\r\n        <code><pre>    MyFunc = j</pre></code>\r\n      </li>\r\n      <li><code>End Function</code></li>\r\n      <li><code>MsgBox(MyFunc(10) & i)</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>印出10 0</li>\r\n      <li>\r\n        再印出 10 1\r\n      </li>\r\n      <li>再印出 10 1</li>\r\n      <li>K這個參數是ByRef代表是把記憶體位址帶進去</li>\r\n      <li>即把i變數的記憶位址帶進去</li>\r\n      <li>實際上修改k的值(Value)是再修改i記憶體位置的值即i的Value</li>\r\n      <li>所以改K等同於在改i</li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-none list-inside Indent\">\r\n      <li>Sub</li>\r\n      <li><code>Sub 名稱(參數)</code></li>\r\n      <li>\r\n        <code><pre>    執行程式碼</pre></code>\r\n      </li>\r\n      <li><code>End Sub</code></li>\r\n      <li>範例</li>\r\n      <li><code>Sub MySquare(x)</code></li>\r\n      <li>\r\n        <code><pre>    MsgBox(x ^ 2)</pre></code>\r\n      </li>\r\n      <li><code>End Sub</code></li>\r\n    </ol>\r\n    <br />\r\n    <ol class=\"text-left list-decimal list-inside Indent\">\r\n      <li>可以把MySquare = x ^ 2改成Return x ^ 2</li>\r\n      <li>可以透過Exit Sub或是Return結束函式</li>\r\n      <li>注意Sub不會有回傳值，所以記得Sub就是Function的子集</li>\r\n      <li>姬掰VB語言，不易外一堆相同類似的語法，有夠繁瑣</li>\r\n      <li>也有ByVal，ByRef但沒有回傳值不然跟上面的Function功能差不多</li>\r\n    </ol>\r\n    <br />\r\n    <br />\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Function\"\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Function.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Function.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Function.vue?vue&type=template&id=ce22caac&\"\nimport script from \"./Function.vue?vue&type=script&lang=js&\"\nexport * from \"./Function.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}